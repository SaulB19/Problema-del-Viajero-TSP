
import java.util.*;

public class Ccity implements Iterator<Ccity>{
    //Es la respresentacion de los vertices (nodos)
    private String nombre;
    //Hashmap clave ciudad guarda distancias
    private HashMap<Ccity,Long> conexiones;
    //Hashmap clave ciudad guarda feromonas desde esta ciudad
    private HashMap<Ccity, Double> feromonas;
    //Hashmap clave numero guarda Ciudad (necesario en caso de utilizar for que funcione por i)
    private HashMap<Integer,Ccity> forcase;
    private int noCiudad=0;
    //Hashmap clave, ciudad con la que conecta
    //Guarda la suma de las nuevas porciones de feromonas para luego agregarselas a las feromonas
    private HashMap<Ccity,Double> temporal;

    public Ccity(String nombre){
        this.nombre = nombre;
        conexiones = new HashMap<>();
        feromonas = new HashMap<>();
        forcase = new HashMap<>();
        temporal = new HashMap<>();
    }
    //Metodo que agrega una conexion desde esta ciudad a otra (con el peso)
    public void agregarConexion (Ccity newCity,Long peso){
        forcase.put(noCiudad,newCity);
        conexiones.put(newCity, peso);
        //Cada que agrega una nueva conexion inicializa la ruta con un nivel de feromonas
        feromonas.put(newCity,0.0354);
        //En temporal la suma hasta el momento es 0
        temporal.put(newCity,0.0);
        noCiudad++;
    }
    //Metodo que regresa el peso conociendo la ciudad
    public Long GetpesoCiudad (Ccity newCity){
        return conexiones.get(newCity);
    }
    //Metodo que nos dice si podemos ir a otra ciudad desde esta
    public boolean contiene (Ccity newCity){
        return conexiones.containsKey(newCity);
    }
    public int CantidadCiudades (){
        return conexiones.size();
    }
    public void setFeromonas (Ccity newCity, double feromonas){
        this.feromonas.replace(newCity,feromonas);
    }
    public double getFeromonas (Ccity ciudad){
        return feromonas.get(ciudad);
    }
    public Ccity GetCitybyNumber (int i){
        return forcase.get(i);
    }
    public int tamano (){
        return forcase.size();
    }
    public void SetSumaFeromonas(Ccity newCity,double suma){
        this.temporal.replace(newCity,suma);
    }
    public double GetSumaFeromonas (Ccity ciudad){
        return temporal.get(ciudad);
    }

    @Override
    public boolean hasNext() {
        return false;
    }

    @Override
    public Ccity next() {
        return null;
    }

    @Override
    public String toString() {
        return nombre;
    }
}
